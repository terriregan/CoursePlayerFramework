<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:ui="org.nflc.common.*"
		  width="100%" height="100%" minHeight="200">
	
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import org.nflc.common.KeyboardController;
			import org.nflc.framework.component.IconItemRenderer;
			import org.nflc.framework.domain.ListData;
			import org.nflc.framework.model.AppModel;
			import org.nflc.managers.KeyCodes;
			import org.nflc.util.DocumentOpener;
			
			import spark.components.HGroup;
		
			[Bindable]
			private var _listCollection:ArrayCollection = new ArrayCollection();
			private var _selectedItem:ListData = null;
			private var _keyboardController:KeyboardController;
		
			public var printableDocument:String;
			
			public function set items( value:Array ):void
			{
				_listCollection.source = value;
			}
		
			//********************************************************
			// private methods 
			//********************************************************
			protected function openDocument():void
			{
				if( grid.selectedIndex != -1 )
					DocumentOpener.open( grid.selectedItem.url );
			}
			
			protected function openPrintable():void
			{
				DocumentOpener.open( printableDocument );
			}
			
			public function set xml( value:XML ):void
			{
				parseShortcuts( value.section );	
			}
			
			// Needed to add this method as the updateIndex() method that ensures that the list item is 
			// in view was causing the scrolling to snap back to the previous selected item
			private function onVerticalScroll( e:Event ):void
			{
				grid.selectedIndex = -1;
			}
			
			private function parseShortcuts( xml:XMLList ):void
			{
				var title:FocusableLabel;
				var keys:FocusableLabel;
				var action:FocusableLabel;
				var grp:HGroup;
				var index:uint = 10;
				for each( var section:XML in xml )
				{
					title = new FocusableLabel();
					title.tabIndex = ++index;
					title.text = section.@title;
					title.setStyle( "fontWeight", "bold" );
					title.setStyle( "paddingTop", 15 );
					title.setStyle( "fontSize", 12 );
					vg.addElement( title );
					for each( var shortcut:XML in section.shortcut )
					{
						grp = new HGroup();
						grp.percentWidth = 100;
						keys = new FocusableLabel();
						keys.addEventListener( FocusEvent.FOCUS_IN, onKeyFocusIn );
						keys.tabIndex = ++index;
						keys.width = 150;
						keys.text = shortcut.@keys;
						
						if( keys.text.indexOf(".") != -1 )
							keys.accessibilityName = "shortcut " + "CTRL+Period";    // for some reason JAWS is not reading a period or comma so we have to force it
						else if( keys.text.indexOf(",") != -1 )
							keys.accessibilityName = "shortcut " + "CTRL+comma";
						else
							keys.accessibilityName = "shortcut " + keys.text;
						
						keys.setStyle( "fontSize", 12 );
						action = new FocusableLabel();
						action.tabIndex = ++index;
						action.percentWidth = 100;
						action.text = shortcut;
						action.accessibilityName = "action " + action.text;
						action.setStyle( "fontSize", 12 );
						
						grp.addElement( keys );
						grp.addElement( action );
						
						vg.addElement( grp );

					}
				}
			}
			
			// event handlers
			
			protected function onKeyFocusIn( e:FocusEvent ):void 
			{
				var idx:int = vg.getElementIndex( UIComponent(e.currentTarget.parent) );
				var lay:VerticalLayout = vg.layout as VerticalLayout;
				if (lay.fractionOfElementInView(idx) < 1) 
				{
					lay.verticalScrollPosition += lay.getScrollPositionDeltaToElement(idx).y;
				}
			}
			

			// turn off lists scrollbars and use the windows
			private function list_creationCompleteHandler(event:FlexEvent):void
			{
				grid.scroller.setStyle("horizontalScrollPolicy", "off");
				grid.scroller.verticalScrollBar.addEventListener( Event.CHANGE, onVerticalScroll );
				setUpKeyboardSensor();
			}
			
			private function setUpKeyboardSensor():void
			{
				if( !_keyboardController )
					_keyboardController = KeyboardController.getInstance();
				
				_keyboardController.setFocusManager( this.focusManager );
				_keyboardController.createHotKey( grid, openDocument );
				_keyboardController.createHotKey( iconPrint, openPrintable );
			}
			
			private function tearDownKeyboardSensor():void
			{
				_keyboardController.removeHotKey( grid );
				_keyboardController.removeHotKey( iconPrint );
				_keyboardController = null;
			}
			
			
			//********************************************************
			// public methods 
			//********************************************************
			
					
			public function dispose( e:Event = null  ):void
			{
				_selectedItem = null;
				
				// remove listeners
				grid.scroller.verticalScrollBar.removeEventListener( Event.CHANGE, onVerticalScroll );
				tearDownKeyboardSensor();
			}
			
			public function activate( e:Event = null ):void
			{
				// add listeners
				if( grid )
					grid.scroller.verticalScrollBar.addEventListener( Event.CHANGE, onVerticalScroll );
				setUpKeyboardSensor();
			}
			
			// ensures selected item is fully in view
			private function updateIndex():void 
			{ 
				grid.ensureIndexIsVisible(grid.selectedIndex); 
			}
			
		]]>
	</fx:Script>
	
	<s:Group width="100%">
		<ui:IconButtonBitmap label="PRINT/SAVE"
				 id="iconPrint" 
				 accessibilityDescription="Activate to save content to your desktop" 
				 tabIndex="6"
				 styleName="linkButton" 
				 color="#1645A2" 
				 click="openPrintable()" right="0"/>
	</s:Group>
	
	<ui:FocusableLabel tabIndex="7" text="Navigation Help" fontWeight="bold" />
	
	<ui:FocusableLabel tabIndex="8" fontSize="10"  width="100%" color="#000000" paddingTop="10"  paddingBottom="5" 
					   accessibilityName="To open a document, click on the item or tab to it and then press the ENTER key or SPACEBAR."
					   text="To open a document, click on the item or tab to it and then press the ENTER key or SPACEBAR."/>
	
	<s:List id="grid" creationComplete="list_creationCompleteHandler(event)"
			tabIndex="9"  width="100%"
			dataProvider="{_listCollection}" borderColor="#dddddd"  
			itemRenderer="org.nflc.framework.component.IconItemRenderer" labelField="title" 
			click="openDocument()" updateComplete="updateIndex()" selectionColor="#f1f1f1" rollOverColor="#f1f1f1">
		<s:layout>
			<s:VerticalLayout variableRowHeight="true" gap="8" paddingBottom="5" paddingTop="5" paddingLeft="10"/>
		</s:layout>
		
	</s:List>
	
	<ui:FocusableLabel tabIndex="10" text="Keyboard Shortcuts" fontWeight="bold" paddingTop="15" />
	
	<s:Scroller id="scroller" height="175"  width="100%" >
		<s:VGroup id="vg" width="100%" />
	</s:Scroller>	  
</s:VGroup>
